const MODULARS = require("modular-values");
const COLORS = require("cssberries-colors");

let modularNames = require("modular-values/names");
let bgColors = {};
bgColors.aside = COLORS.generate.gradate('white', 3, .1, 1, 'alpha', 0);
module.exports = {
    screens: {
        'sm': '576px',
        'md': '768px',
        'lg': '992px',
        'xl': '1200px',
    },
    fonts: {
        'sans': [
            'system-ui',
            'BlinkMacSystemFont',
            '-apple-system',
            'Segoe UI',
            'Roboto',
            'Oxygen',
            'Ubuntu',
            'Cantarell',
            'Fira Sans',
            'Droid Sans',
            'Helvetica Neue',
            'sans-serif',
        ],
        'serif': [
            'Constantia',
            'Lucida Bright',
            'Lucidabright',
            'Lucida Serif',
            'Lucida',
            'DejaVu Serif',
            'Bitstream Vera Serif',
            'Liberation Serif',
            'Georgia',
            'serif',
        ],
        'mono': [
            'Menlo',
            'Monaco',
            'Consolas',
            'Liberation Mono',
            'Courier New',
            'monospace',
        ],
    },
    //  names, base, start, amount, mod, unit
    textSizes: MODULARS.generateDimension(modularNames.digits, 7, 8, 10, 1.2, 'px'),
    fontWeights: {
        'hairline': 100,
        'thin': 200,
        'light': 300,
        'normal': 400,
        'medium': 500,
        'semibold': 600,
        'bold': 700,
        'extrabold': 800,
        'black': 900,
    },
    textColors: COLORS.generate.generateSet('strongness', 'text', '', 5),
    // backgroundColors: COLORS.generate.generateManualSet({
    //     'primary': 'blue',
    //     'secondary': 'red',
    //     'accent': 'purple',
    //     'canvas': 'gradate, white, 3, .1, 1, darken, 0',
    //     'aside': ['gradate', 'white', 3, .1, 1, 'darken', 1],
    //     'content': ['gradate', 'white', 3, .1, 1, 'darken', 2],
    //     'success': 'green',
    //     'warning': 'orange',
    //     'error': 'red',
    //     'info': 'cyan',
    //     'selected': 'cyan',
    //     'temporary': 'cyan'
    // }),
    backgroundColors: bgColors,

    backgroundSize: {
        'auto': 'auto',
        'cover': 'cover',
        'contain': 'contain',
    },
    borderWidths: {
        default: '1px',
        '0': '0',
        'bold': '2px',
        'bolder': '3px',
        'boldest': '5px',
    },
    borderColors: COLORS.generate.generateSet('strongness', 'border', '-', 5),
    borderRadius: {
        default: '3px',
        'none': '0',
        'smallest': '1px',
        'small': '2px',
        'medium': '3px',
        'large': '5px',
        'largest': '8px',
        'full': '100em'
    },
    width: MODULARS.generateDimension(modularNames.tShirt, 1, 1, 2, 1.5, 'px'),
    height: MODULARS.generateDimension(modularNames.ererrer, 1, 0, 7, 1.5, 'px'),
    minWidth: MODULARS.generateDimension(modularNames.ererrer, 1, 0, 7, 1.5, 'px'),
    minHeight: MODULARS.generateDimension(modularNames.ererrer, 1, 0, 7, 1.5, 'px'),
    maxWidth: MODULARS.generateDimension(modularNames.tShirt, 1, 1, 10, 1.5, 'px'),
    maxHeight: MODULARS.generateDimension(modularNames.ererrer, 1, 0, 7, 1.5, 'px'),
    padding: MODULARS.generateDimension(modularNames.tShirt, 1, 1, 10, 1.5, 'px'),
    margin: MODULARS.generateDimension(modularNames.tShirt, 1, 1, 10, 1.5, 'px'),
    negativeMargin: MODULARS.generateDimension(modularNames.tShirt, 1, 0, 2, 1.5, 'px'),
    shadows: {
        default: '0 2px 4px 0 rgba(0,0,0,0.10)',
        'md': '0 4px 8px 0 rgba(0,0,0,0.12), 0 2px 4px 0 rgba(0,0,0,0.08)',
        'lg': '0 15px 30px 0 rgba(0,0,0,0.11), 0 5px 15px 0 rgba(0,0,0,0.08)',
        'inner': 'inset 0 2px 4px 0 rgba(0,0,0,0.06)',
        'outline': '0 0 0 3px rgba(52,144,220,0.5)',
        'none': 'none',
    },
    zIndex: {
        'auto': 'auto',
        '0': 0,
        '10': 10,
        '20': 20,
        '30': 30,
        '40': 40,
        '50': 50,
    },
    opacity: {
        '0': '0',
        '25': '.25',
        '50': '.5',
        '75': '.75',
        '100': '1',
    },
    svgFill: {
        'current': 'currentColor',
    },
    svgStroke: {
        'current': 'currentColor',
    },
    modules: {
        appearance: false,
        backgroundAttachment: false,
        backgroundColors: [],
        backgroundPosition: false,
        backgroundRepeat: false,
        backgroundSize: false,
        borderCollapse: false,
        borderColors: false,
        borderRadius: false,
        borderStyle: false,
        borderWidths: false,
        cursor: false,
        display: false,
        flexbox: false,
        float: false,
        fonts: false,
        fontWeights: false,
        height: false,
        leading: false,
        lists: false,
        margin: false,
        maxHeight: false,
        maxWidth: false,
        minHeight: false,
        minWidth: false,
        negativeMargin: false,
        objectFit: false,
        objectPosition: false,
        opacity: false,
        outline: false,
        overflow: false,
        padding: false,
        pointerEvents: false,
        position: false,
        resize: false,
        shadows: false,
        svgFill: false,
        svgStroke: false,
        tableLayout: false,
        textAlign: false,
        textColors: false,
        textSizes: false,
        textStyle: false,
        tracking: false,
        userSelect: false,
        verticalAlign: false,
        visibility: false,
        whitespace: false,
        width: false,
        zIndex: false,
    },

    plugins: [
        require('tailwindcss/plugins/container')({
            center: true,
            // padding: '1rem',
        }),
    ],
    options: {
        prefix: '',
        important: false,
        separator: ':',
    },

}